#!/bin/sh -

HOME=/
PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin:/usr/local/sbin
export HOME PATH

. /etc/rc.conf

# Start up swapping.
##echo "Activating swap partitions ..." 
##swapon -a 

echo "Checking and Mounting filesystem(s) ..."

MOUNT_MD1=/mnt/md1
MOUNT_IDE1=/mnt/ide1
MOUNT_IDE2=/mnt/ide2
MOUNT_IDE3=/mnt/ide3
MOUNT_IDE4=/mnt/ide4
MOUNT_USB1=/mnt/usb1
MOUNT_USB2=/mnt/usb2
MOUNT_USB3=/mnt/usb3
MOUNT_USB4=/mnt/usb4
MOUNT_ODD=/mnt/cdrom
MOUNT_ODD1=/mnt/odda
MOUNT_USBS=/mnt/usbs
##
##debug_Aaron on 12/30/2004, HD partition will be 3 
##                       /dev/hda1 - system (contain system files and data)
##                       /dev/hda2 - volume1 (contain user data)
##                       /dev/hda3 - swap memory
## search the Master disk partition
##debug_Aaron on 10/14/2004, change file system type to auto (11/05/2004)
##            on 11/12/2004, mount according to file system type
##            on 03/14/2005, extract hddapp.tgz to Ramdisk then insmod USB 2.0 driver then copy to hard disk
##            on 05/20/2005, mount points changed to /mnt/IDE1, /mnt/IDE2, /mnt/USB1 and /mnt/USB2
##            on 05/27/2005, add exist swap memory to /etc/fstab
##            on 06/03/2005, extarct hddapp.tgz to /tmpmnt
##            on 06/15/2005, mount FAT32 with option iocharset=utf8
##            on 06/16/2005, support /dev/loop
##            on 06/24/2005, do not save smb.conf and proftpd.conf
##            on 06/28/2005, write $mounted_device to /tmp/mount.point and do not exit when mount failed for data encrypted
##            on 06/28/2005, extract hddapp.tgz and cp webroot and sausalito to Ramdisk
##            on 07/11/2005, change hddapp.tgz to hddapp.bz2 to save flash space
##	      on 09/29/2005, in BSP mode should add swap entry to /etc/fstab
##	      on 10/06/2005, in BSP mode should change mount directory according to device name, like as /dev/hdb1->/mnt/IDE2
##  	      on 11/22/2005, rename USB modules filename for kernel 2.6
##	      on 07/13/2006, for small size Ramdisk, do not copy /tmpmnt/webroot and /tmpmnt/sausalito to Ramdisk 
##	      on 08/09/2006, insmod xfs.ko for XFS support	
##	      on 09/08/2006, call e2fsck the system partition to ensure the system integration
##            on 02/13/2008, add FAT32_ID4 for FAT32 (not LBA)
mkdir -p /tmp
mounted_device=""
swap_device=""

#echo "Copy hddapp.bz2 from flash to Ramdisk..."
#hddapp_mtd=`cat /proc/mtd | grep "Application" | cut -f1 -d:`
#if [ -z "$hddapp_mtd" ]; then
#      echo "Warning: Empty mtd for Application...."
#else            
#T101222.sg - Do nou use hddapp
#break
#echo "Woooooops"

#      ##dd if=/dev/${hddapp_mtd} of=/tmpmnt/hddapp.tgz
#      ##tar zxpf /tmpmnt/hddapp.tgz -C /tmpmnt
#      dd if=/dev/${hddapp_mtd} of=/tmpmnt/hddapp.bz2
#      tar jxpf /tmpmnt/hddapp.bz2 -C /tmpmnt

##debug_Aaron on 10/24/2006, BSP does not need to copy webroot and sausalitio
##debug_Aaron on 11/09/2006, should check /tmpmnt in stead of Ramdisk
##debug_Aaron on 07/13/2006 do not move to Ramdisk here
#      if [ -x /tmpmnt/sausalito/sbin/cced -o -x /usr/sausalito/sbin/cced ]; then
#      		if [ -d /tmpmnt/webroot ]; then
#           		mkdir -p /usr/webroot 
#      	   		cp -a /tmpmnt/webroot/*      /usr/webroot	
#      		fi
#      		if [ -d /tmpmnt/sausalito ]; then
#      	   		mkdir -p /usr/sausalito
#           		cp -a /tmpmnt/sausalito/*   /usr/sausalito
#           		cp -a /tmpmnt/lib/*         /usr/lib
#      	   		mkdir -p /usr/share
#    	   		  cp -a /tmpmnt/share/*       /usr/share
#      	   		ln -s /usr/webroot/locale/  /usr/share/
#      		fi

#		      ##debug_Aaron on 08/02/2006 for /usr/webroot and /usr/sausalito 
#		      if [ ! -e /usr/webroot ]; then
#			        ln -s /tmpmnt/webroot /usr/webroot
#		      fi	
#		      if [ ! -e /usr/sausalito ]; then
#			        ln -s /tmpmnt/sausalito /usr/sausalito
#		      fi
#	    else
#		     mkdir -p /usr/webroot
#	    fi
#fi                 

mkdir -p /usr/webroot

#T110315.sg - not support SATA
#added by vivian 2007/1/17
#if [ -e /lib/modules/sata0_storlink.ko ]; then
#    if [  -x /usr/sausalito/sbin/cced ]; then
#     		/usr/sausalito/handlers/base/sata_disk/sata_lepus boot_init
#    fi
 
#T101221.sg - not support RAID 
#    echo 'DEVICE /dev/hd*[0-9] /dev/sd*[0-9]' > /etc/mdadm.conf
#    mdadm  --examine  --scan >> /etc/mdadm.conf
#    mdadm --assemble --scan
#fi
#end by vivian

if [ -x /usr/sausalito/sbin/cced ]; then
        MOUNT_DIR=/system
else
        MOUNT_DIR=$MOUNT_IDE1
fi
mkdir -p $MOUNT_DIR

##debug_Aaron on 03/05/2007 for NTFS read/write
if [ -e /lib/modules/ufsd.ko ]; then
	echo "insmod /lib/modules/ufsd.ko"
	insmod /lib/modules/ufsd.ko
fi

#debug_Aaron on 04/03/2007 for NTFS-3g NTFS read/write
if [ -e /lib/modules/fuse.ko ]; then
        echo "insmod /lib/modules/fuse.ko"
        insmod /lib/modules/fuse.ko
fi

#T110315.sg - not support SATA
##debug_Aaron on 04/18/2006, support SATA hard disk
#uname -r | grep "2.6.15"
#if [ $? = 0 ]; then
#	##debug_Aaron on 07/16/2008 let GUI does it
#	if [  ! -x /usr/sausalito/sbin/cced ]; then
#    		if [ -e /lib/modules/sata0_storlink.ko ]; then
#	    		insmod /lib/modules/sata0_storlink.ko
#	  	fi
#	fi
#	##debug_Aaron on 08/09/2006 support XFS
#	if [ -e /lib/modules/xfs.ko ]; then
#        	insmod /lib/modules/xfs.ko
#    	fi
#fi


#T110525.sg - not support loop
##debug_Aaron on 06/16/2005, support /dev/loop
##charles_TU, 11/15/2005, for linux 2.6
#uname -r | grep "2.6"
#if [ $? = 0 ]; then
#	if [ -e /lib/modules/loop.ko ]; then
#		insmod /lib/modules/loop.ko
#	fi
#else
#	if [ -e /lib/modules/loop.o ]; then
#		insmod /lib/modules/loop.o
#	fi
#fi

##debug_Aaron on 01/12/2005, support USB 2.0
##charles_TU, 11/15/2005, for linux 2.6
uname -r | grep "2.6"
if [ $? = 0 ]; then
	if [ -e /lib/modules/ehci-hcd.ko ]; then
		insmod /lib/modules/ehci-hcd.ko
		sleep 5
	fi
	if [ -e /lib/modules/ohci-hcd.ko ]; then
		insmod /lib/modules/ohci-hcd.ko
		sleep 5
	fi
	if [ -e /lib/modules/uhci-hcd.ko ]; then
		insmod /lib/modules/uhci-hcd.ko
		sleep 5
	fi                        
else
	if [ -e /lib/modules/ehci-hcd.o ]; then
		insmod /lib/modules/ehci-hcd.o
		sleep 5
	fi
	if [  -e /lib/modules/usb-ohci.o ]; then
		insmod /lib/modules/usb-ohci.o
		sleep 5
	fi
	if [  -e /lib/modules/usb-uhci.o ]; then
		insmod /lib/modules/usb-uhci.o
		sleep 5
	fi                        
fi

NTFS_ID1="TFS"
FAT32_ID1="kdosfs"
FAT32_ID2="SDOS5.0"
FAT32_ID3="FAT16"
FAT32_ID4="FAT32"
ret_val1=0
ret_val2=0
for device in /dev/md0 /dev/hda1 /dev/hdb1 /dev/hdc1 /dev/hdd1 /dev/sda1 /dev/sdb1 /dev/sdc1 /dev/sdd1
do
#T101222.sg - skip mount to HDD
break
echo "Wooooooops2"

    if [ -x /usr/sausalito/sbin/cced ]; then
        echo "SkinnyNAS found, mount $MOUNT_DIR"
        mount -t auto $device $MOUNT_DIR 
        ret_val1=$?
        ##debug_Aaron on 09/08/2006 check /system partition, make sure system can boot up
		    if [ $ret_val1 = 0 ]; then
			      umount $MOUNT_DIR
            echo "check filesystem..........."
            e2fsck -p $device
            mount -t auto $device $MOUNT_DIR 
            ret_val1=$?
        fi
    else
        echo "SkinnyNAS NOT found, mount $MOUNT_DIR"
        dd if=$device of=/tmp/out.fat32 count=1 2>/dev/null
        if [ $? != 0 ]; then   
            continue
        fi

        ##debug_Aaron on 10/06/2005, choose MOUNT_DIR according to device
        case $device in
            /dev/md0)
                MOUNT_DIR=$MOUNT_MD1
                ;;
            /dev/hda1)
                MOUNT_DIR=$MOUNT_IDE1
                ;;
            /dev/hdb1) 
                MOUNT_DIR=$MOUNT_IDE2
                ;;
            /dev/hdc1)
                MOUNT_DIR=$MOUNT_IDE3
                ;;
            /dev/hdd1)
                MOUNT_DIR=$MOUNT_IDE4
                ;;
            /dev/sda1)
                MOUNT_DIR=$MOUNT_USB1
                ;;
            /dev/sdb1)
                MOUNT_DIR=$MOUNT_USB2
                ;;
           /dev/sdc1)
                MOUNT_DIR=$MOUNT_USB3
                ;;
           /dev/sdd1)
                MOUNT_DIR=$MOUNT_USB4
                ;;
        esac
        mkdir -p $MOUNT_DIR

        grep $FAT32_ID1 /tmp/out.fat32
        ret_val1=$?
        grep $FAT32_ID2 /tmp/out.fat32
        ret_val2=$?
        grep $FAT32_ID3 /tmp/out.fat32
        ret_val3=$?
	grep $FAT32_ID4 /tmp/out.fat32
        ret_val4=$?	
        echo "ret_val1=$ret_val1, ret_val2=$ret_val2, ret_val3=$ret_val3, ert_val4=$ret_val4"
       	if [ $ret_val1 = 0 -o $ret_val2 = 0 -o $ret_val3 = 0 -o $ret_val4 = 0 ]; then
            echo "$device is FAT32"
            ##debug_Aaron
            ##echo "check filesystem..........."
            ##dosfsck -a $device
            ##debug_Aaron on 09/28/2005, for linux 2.6
            mount -t vfat -o umask=0000,iocharset=utf8,shortname=winnt $device $MOUNT_DIR
        else
            echo "$device is not FAT32"

            ##debug_Aaron
            ##echo "check filesystem..........."
            ##e2fsck -p $device
            ##debug_Aaron on 03/05/2007 for NTFS
            grep $NTFS_ID1 /tmp/out.fat32
            ret_val=$?
            if [ $ret_val = 0 ]; then
    				    ##debug_Aaron on 04/03/2007 NTFS-3g NTFS read/write
    				    ##debug_Aaron on 05/31/2007 for Paragon NTFS read/write
    				    if [ -e /lib/modules/ufsd.ko ]; then
    					      mount -t ufsd -o umask=0000 $device $MOUNT_DIR
    				    else
    					      ntfs-3g $device $MOUNT_DIR
    				    fi
    			  else
                mount -t auto -o usrquota,grpquota $device $MOUNT_DIR
			      fi
        fi
		    ret_val1=$?		
	  fi

    if [ $ret_val1 != 0 ]; then
		    continue
	  fi

    mounted_device=$device

	  ##debug_Aaron
	  echo "The mounted device is.............."
    echo "mounted_device=$device"
	  echo mount_dir=$MOUNT_DIR
      
	  ##debug_Aaron on 08/02/2005, for later used by sys_init, even there is no ImageInfo
	  ##debug on 09/08/2006, write to /tmp/mount.point always
    ##if [ ! -e /tmp/mount.point ]; then
        echo $mounted_device > /tmp/mount.point
	  ##fi
 
    if [ -x /usr/sausalito/sbin/cced ]; then
        ## check whether hard disk is our format
        if [ ! -e /system/ImageInfo ]; then
            umount $device
            mounted_device=""
            echo "Hard disk not in correct format"
    
            ##debug_Aaron on 04/19/2005, continue to search next hard disk 
    			  ##exit 0
    			  continue
        fi
    fi 

    ##debug_Aaron on 05/25/2005, for later used by sys_init
    ##echo $mounted_device > /tmp/mount.point

    if [ $NETWORK_INSTALL_VERSION = "NO" ]; then
            ##debug_Aaron, check whether /system/hddappp exists or not
            if [ -d "$MOUNT_DIR/hddapp" ]; then
                ##debug_Aaron on 12/02/2004, keep /etc/proftpd.conf and /etc/samba/*
		#debug_Aaron on 06/26/2008, donot keep /etc/exports, let GUI does
                ##echo "$MOUNT_DIR/hddapp already exists keep /etc/proftpd.conf /etc/exports and /etc/samba/*"
                echo "$MOUNT_DIR/hddapp already exists keep /etc/proftpd.conf and /etc/samba/*"
                mkdir -p /tmp/conf
	        if [ ! -x /usr/sausalito/sbin/cced ]; then
         	       if [ -e $MOUNT_DIR/hddapp/etc/exports ]; then
                	    cp $MOUNT_DIR/hddapp/etc/exports /tmp/conf
                	fi
		fi
                if [ -d $MOUNT_DIR/hddapp/etc/samba ]; then
                    	cp -a $MOUNT_DIR/hddapp/etc/samba/ /tmp/conf
                    	if [ -x /usr/sausalito/sbin/cced ]; then
                        	##debug_Aaron on 08/04/2005, do not save smb.conf
                        	##rm -f $MOUNT_DIR/hddapp/etc/samba/smb.conf
                        	rm -f /tmp/conf/samba/smb.conf
                    	fi
	        fi

                echo "Extract hddapp.tgz to $MOUNT_DIR"
                ## dd if=/dev/${hddapp_mtd} of=/tmpmnt/hddapp.tgz
                rm -rf $MOUNT_DIR/hddapp
                ##tar zxpf /tmpmnt/hddapp.tgz -C $MOUNT_DIR
	        mv /tmpmnt/hddapp/ $MOUNT_DIR

	        if [ ! -x /usr/sausalito/sbin/cced ]; then
                	if [ -e /tmp/conf/proftpd.conf ]; then
                        	cp  /tmp/conf/proftpd.conf $MOUNT_DIR/hddapp/etc
		        fi
	        fi
	        if [ ! -x /usr/sausalito/sbin/cced ]; then
	        	if [ -e /tmp/conf/exports ]; then
                    		cp  /tmp/conf/exports $MOUNT_DIR/hddapp/etc
			fi
		fi
		if [ -d /tmp/conf/samba ]; then
                	cp -a /tmp/conf/samba/*  $MOUNT_DIR/hddapp/etc/samba
		fi
            else
                echo "Copy hddapp.tgz from flash..."
                ##dd if=/dev/${hddapp_mtd} of=/tmpmnt/hddapp.tgz
                rm -rf $MOUNT_DIR/hddapp
                ##tar zxpf /tmpmnt/hddapp.tgz -C $MOUNT_DIR
			          mv /tmpmnt/hddapp/ $MOUNT_DIR
            fi
            ln -s $MOUNT_DIR/hddapp /usr/hddapp
			
            if [ -d /usr/webroot -a "${CGI_IN_RAMDISK}" = "NO" ]; then
                rm -rf $MOUNT_DIR/usr/webroot
                mkdir -p $MOUNT_DIR/usr/webroot
			          ##debug_Aaron on 08/28/2006 copy all files in stead of move because could be a link
                cp -af /usr/webroot/* $MOUNT_DIR/usr/webroot
			          ##mv  /usr/webroot/ $MOUNT_DIR/usr/
                ##rm -rf /usr/webroot
			          rm -rf /usr/webroot
                ln -s $MOUNT_DIR/usr/webroot /usr/webroot

			          ##debug_Aaron on 03/25/2005 for i18n
                rm -rf /usr/share
                mkdir -p /usr/share
                ln -s /usr/webroot/locale/  /usr/share/
            fi

            ##debug_Aaron, on 10/29/2004 for sausalito, 11/12/2004 move the whole directory
            if [ -d /usr/sausalito -a "${CGI_IN_RAMDISK}" = "NO" ]; then
                mkdir -p $MOUNT_DIR/usr/sausalito
                ##debug_Aaron on 056/01/2005, to make clean /system/usr/sausalito but save codb
			          cp -a $MOUNT_DIR/usr/sausalito/codb/ /tmp
                rm -rf $MOUNT_DIR/usr/sausalito/*
                cp -a /usr/sausalito/* $MOUNT_DIR/usr/sausalito
			          cp -a /tmp/codb/* $MOUNT_DIR/usr/sausalito/codb 
                rm -rf /tmp/codb
                rm -rf /usr/sausalito
                ln -s $MOUNT_DIR/usr/sausalito  /usr/sausalito
           			##debug_Aaron on 03/25/2005 for i18n
                ## ln -s $MOUNT_DIR/usr/share  /usr/share
		        fi

            if [ -d /usr/sausalito -a "${CGI_IN_RAMDISK}" = "YES" ]; then
	              rm -rf /usr/sausalito/codb
                #for backword compatiable
                if [ -d $MOUNT_DIR/usr/sausalito/codb ]; then
                    cp -af $MOUNT_DIR/usr/sausalito/codb $MOUNT_DIR
                    rm -rf $MOUNT_DIR/usr/sausalito/codb
                fi
     
                if [ ! -d $MOUNT_DIR/codb ]; then
	                  mkdir -p $MOUNT_DIR/codb
	              fi
	   
                ln -sf $MOUNT_DIR/codb /usr/sausalito/codb
            fi
    fi
         
	##debug_Aaron on 09/29/2005, BSP should append swap device to /etc/fstab also
	##if [ -x /usr/sausalito/sbin/cced ]; then

        	##MOUNT_DIR=/volume1
                case $device in
                	/dev/md0)
 				device=/dev/md1
 			        swap_device=/dev/hda3
                        	MOUNT_DIR=$MOUNT_MD1
				;;
                	/dev/hda1)
 				device=/dev/hda2
 			        swap_device=/dev/hda3
                        	MOUNT_DIR=$MOUNT_IDE1
				;;
			/dev/hdb1)
                                device=/dev/hdb2
 			        swap_device=/dev/hdb3
                        	MOUNT_DIR=$MOUNT_IDE2
                                ;;
			/dev/hdc1)
                                device=/dev/hdc2
 			        swap_device=/dev/hdc3
                        	MOUNT_DIR=$MOUNT_IDE3
                                ;;
			/dev/hdd1)
                                device=/dev/hdd2
 			        swap_device=/dev/hdd3
                        	MOUNT_DIR=$MOUNT_IDE4
                                ;;
			/dev/sda1)
                                device=/dev/sda2
 			        swap_device=/dev/sda3
                        	MOUNT_DIR=$MOUNT_USB1
                                ;;
			/dev/sdb1)
                                device=/dev/sdb2
 			        swap_device=/dev/sdb3
                        	MOUNT_DIR=$MOUNT_USB2
                                ;;
			/dev/sdc1)
                                device=/dev/sdc2
 			        swap_device=/dev/sdc3
                        	MOUNT_DIR=$MOUNT_USB3
                                ;;
			/dev/sdd1)
                                device=/dev/sdd2
 			        swap_device=/dev/sdd3
                        	MOUNT_DIR=$MOUNT_USB4
                                ;;
		esac
		mkdir -p $MOUNT_DIR

	##debug_Aaron on 09/29/2005, BSP should append swap device to /etc/fstab also
	if [ -x /usr/sausalito/sbin/cced ]; then

 		dd if=$device of=/tmp/out.fat32 count=1 2>/dev/null

		if [ $? != 0 ]; then
		    ##exit 0
		    echo "dd if=$device failed !!!"
		    contine
		fi

                grep $FAT32_ID1 /tmp/out.fat32
                ret_val1=$?
                grep $FAT32_ID2 /tmp/out.fat32
                ret_val2=$?
                grep $FAT32_ID3 /tmp/out.fat32
                ret_val3=$?
		grep $FAT32_ID4 /tmp/out.fat32
        	ret_val4=$?
                if [ $ret_val1 = 0 -o $ret_val2 = 0 -o $ret_val3 = 0 -o $ret_val4 = 0 ]; then
                	echo "$device is FAT32"
		
			##debug_Aaron
	                ##echo "check filesystem..........."
        	        ##dosfsck -a $device

			##debug_Aaron on 09/28/2005, for linux 2.6
				mount -t vfat -o umask=0000,iocharset=utf8,shortname=winnt $device $MOUNT_DIR 
                else            
                       	echo "$device is not FAT32"

			##debug_Aaron
	                ##echo "check filesystem..........."
        	        ##e2fsck -p $device

			 ##debug_Aaron on 03/05/2007 for NTFS
                        grep $NTFS_ID1 /tmp/out.fat32
                        ret_val=$?
                        if [ $ret_val = 0 ]; then
				##debug_Aaron on 04/03/2007 NTFS-3g NTFS read/write
				##debug_Aaron on 05/31/2007 for Paragon NTFS read/write
                                if [ -e /lib/modules/ufsd.ko ]; then 
                                	mount -t ufsd -o umask=0000 $device $MOUNT_DIR
                                else
                                        ntfs-3g $device $MOUNT_DIR
				fi
			else
                       		mount -t auto -o usrquota,grpquota $device $MOUNT_DIR
			fi
 		fi
		
		##debug_Aaron on 08/01/2005, if this is an encrypted partition, let it go
		if [ $? != 0 ]; then
			if [ ! -e /system/.crypt ]; then
				##exit -1
				continue
			fi
		fi
                        
	##	dd if=$swap_device of=/tmp/out count=1 2>/dev/null
        ##        if [ $? = 0 ]; then
        ##              	echo "$swap_device  swap    swap defaults        0 0" >> /etc/fstab
        ##        fi
	       ##debug_Aaron on 07/05/2007, redirect messages and log.cced to hard disk to save Ramdisk space
	       ##debug_Aaron on 07/16/2007, give up to redirect
	       ##if [ ! -e /system/.crypt ]; then
               ##		mkdir -p $MOUNT_DIR/var/log
		##	rm -f $MOUNT_DIR/var/log/messages 
		##	rm -f $MOUNT_DIR/var/log/log.cced 
	       	##	/bin/touch  $MOUNT_DIR/var/log/messages	
	       	##	/bin/touch  $MOUNT_DIR/var/log/log.cced	
               	##	ln -s $MOUNT_DIR/var/log/messages   /var/log/messages
               	##	ln -s $MOUNT_DIR/var/log/log.cced   /var/log/log.cced
		##fi
 
	 else
		mkdir -p $MOUNT_DIR
		mkdir -p $MOUNT_DIR/shares	
		mkdir -p $MOUNT_DIR/shares/public
                chmod -R 777 $MOUNT_DIR/shares	
 	 fi

         ##debug_Aaron on 09/29/2005, BSP should append swap device to /etc/fstab also 
 	 dd if=$swap_device of=/tmp/out count=1 2>/dev/null
         if [ $? = 0 ]; then
         	echo "$swap_device  swap    swap defaults        0 0" >> /etc/fstab
         fi

         if [ -f "$MOUNT_DIR/aquota.user" -a -f "$MOUNT_DIR/aquota.group" ]; then
                DoQuotaCheck=0
         else    
                DoQuotaCheck=1
         fi

         if [ $DoQuotaCheck -eq 1 ]; then
                echo "Quotacheck on $MOUNT_DIR."
                /usr/hddapp/sbin/quotacheck -c -g -u -F vfsv0 $MOUNT_DIR
         fi

         echo "Quotaon on $MOUNT_DIR."
         /usr/hddapp/sbin/quotaon -F vfsv0 $MOUNT_DIR

	 ##debug_Aaron on 04/18/2007, for usb backup
         echo $MOUNT_DIR >> /tmp/mount.point

	 ##debug_Aaron on 05/25/2005, for later used by sys_init	 
	 ##echo $MOUNT_DIR > /tmp/mount.point

         break
done

echo "mounted device=$mounted_device"

#####################################################################################
#T110427.sg - mount device
#T110924.sg - odd only
#T111006.sg - disable mount; use watchcatd!
#####################################################################################
#echo "T110316.sg - mount devices"
#mkdir -p $MOUNT_ODD1
#ln -s $MOUNT_ODD1 $MOUNT_ODD
#mkdir -p $MOUNT_USB1
#ln -s $MOUNT_USB1 $MOUNT_USBS

#for device in sr0 sda sdb
#for device in sr0
#do
#	if [ -e /sys/block/$device ]; then
#		echo "Found /sys/block/$device"

#		case $device in
#		sr0)
#			cddfs -D /dev/sg0 $MOUNT_ODD1
#			if [ $? != 0 ]; then
#				#mount -t auto /dev/sr0 $MOUNT_ODD1
#				mount -t udf /dev/sr0 $MOUNT_ODD1
#				if [ $? != 0 ]; then
#					mount -t auto /dev/sr0 $MOUNT_ODD1
#				fi
#			fi
#			;;
		#sda)
		#	#mount -t auto /dev/sda1 $MOUNT_USBS
		#	#mount -t vfat -o umask=0000,iocharset=utf8,shortname=winnt /dev/sda1 $MOUNT_USBS 
		#	mount -t vfat -o sync,noatime,umask=0000,iocharset=utf8,shortname=winnt /dev/sda1 $MOUNT_USB1 
		#	;;
		#sdb)
		#	#mount -t auto /dev/sdb1 $MOUNT_USBS
		#	#mount -t vfat -o umask=0000,iocharset=utf8,shortname=winnt /dev/sdb1 $MOUNT_USBS 
		#	mount -t vfat -o sync,noatime,umask=0000,iocharset=utf8,shortname=winnt /dev/sdb1 $MOUNT_USB1 
		#	;;
#		esac
#	fi
#done
#####################################################################################


## debug_Aaron on 01/13/2005, no hard disk found exit
if [ -z $mounted_device ]; then

	##debgu_Aaron on 07/13/2006 only copy to Ramdisk when no hard disk exists
      if [ -d /tmpmnt/webroot ]; then
	   rm -rf /usr/webroot
           mkdir -p /usr/webroot
           cp -a /tmpmnt/webroot/*      /usr/webroot
      fi
      if [ -d /tmpmnt/sausalito ]; then
	   rm -rf /usr/sausalito	
           mkdir -p /usr/sausalito
           cp -a /tmpmnt/sausalito/*   /usr/sausalito
           cp -a /tmpmnt/lib/*         /usr/lib
           mkdir -p /usr/share
           ##cp -a /tmpmnt/share/*       /usr/share
           ln -s /usr/webroot/locale/  /usr/share/
      fi

        exit 0
fi

##debug_Aaron on 10/14/2004, change file system type to auto (11/05/2004)
##            on 11/12/2004, mount according to file system type
num=2
ret_val=0
isFAT32=0
for device in /dev/md0 /dev/hda1 /dev/hdb1 /dev/hdc1 /dev/hdd1 /dev/sda1 /dev/sdb1 /dev/sdc1 /dev/sdd1
do
        if [ $device = $mounted_device ]; then		
		continue
	fi

	##MOUNT_DIR=/volume$num

	swap_device=""
	case $device in
       	/dev/md0)
		 device1=/dev/md1
		 swap_device=/dev/hda3
                 MOUNT_DIR=$MOUNT_MD1                
                 ;;
       	/dev/hda1)
		 device1=/dev/hda2
		 swap_device=/dev/hda3
                 MOUNT_DIR=$MOUNT_IDE1
                 ;;
        /dev/hdb1)
		 device1=/dev/hdb2
		 swap_device=/dev/hdb3
                 MOUNT_DIR=$MOUNT_IDE2
                 ;;
        /dev/hdc1)
		 device1=/dev/hdc2
		 swap_device=/dev/hdc3
                 MOUNT_DIR=$MOUNT_IDE3
                 ;;
        /dev/hdd1)
		 device1=/dev/hdd2
		 swap_device=/dev/hdd3
                 MOUNT_DIR=$MOUNT_IDE4
                 ;;
        /dev/sda1)
		 device1=/dev/sda2
		 swap_device1=/dev/sda3
                 MOUNT_DIR=$MOUNT_USB1
                 ;;
        /dev/sdb1)
		 device1=/dev/sdb2
		 swap_device=/dev/sdb3
                 MOUNT_DIR=$MOUNT_USB2
                 ;;
        /dev/sdc1)
		 device1=/dev/sdc2
		 swap_device=/dev/sdc3
                 MOUNT_DIR=$MOUNT_USB3
                 ;;
        /dev/sdd1)
		 device1=/dev/sdd2
		 swap_device=/dev/sdd3
                 MOUNT_DIR=$MOUNT_USB4
                 ;;
        esac
##debug_Aaron
        echo "mkdir -p $MOUNT_DIR"
        mkdir -p $MOUNT_DIR

 	dd if=$device of=/tmp/out.fat32 count=1 2>/dev/null
	if [ $? != 0 ]; then
		rm -rf $MOUNT_DIR
		continue
	fi

        grep $FAT32_ID1 /tmp/out.fat32
        ret_val1=$?
        grep $FAT32_ID2 /tmp/out.fat32
        ret_val2=$?
        grep $FAT32_ID3 /tmp/out.fat32
        ret_val3=$?
	grep $FAT32_ID4 /tmp/out.fat32
        ret_val4=$?
        if [ $ret_val1 = 0 -o $ret_val2 = 0 -o $ret_val3 = 0 -o $ret_val4 = 0 ]; then
              echo "$device is FAT32"

	      ##debug_Aaron
              ##echo "check filesystem..........."
              ##dosfsck -a $device

	      ##debug_Aaron on 09/28/2005, for linux 2.6
	      		mount -t vfat -o umask=0000,iocharset=utf8,shortname=winnt $device $MOUNT_DIR
        else
              echo "$device is not FAT32"
             
	      ##debug_Aaron
              ##echo "check filesystem..........."
              ##e2fsck -p $device

	      ##debug_Aaron on 03/05/2007 for NTFS
              grep $NTFS_ID1 /tmp/out.fat32
              ret_val=$?
              if [ $ret_val = 0 ]; then
			##debug_Aaron on 04/03/2007 NTFS-3g NTFS read/write
			##debug_Aaron on 05/31/2007 for Paragon NTFS read/write
                        if [ -e /lib/modules/ufsd.ko ]; then 
              			mount -t ufsd -o umask=0000 $device $MOUNT_DIR
                        else
                        	ntfs-3g $device $MOUNT_DIR
			fi
	      else 
              	        ##debug_Aaron on 05/19/2005, do not do quota check
	                ##mount -t auto -o usrquota,grpquota $device $MOUNT_DIR
	                mount -t auto $device $MOUNT_DIR
	      fi
        fi
        if [ $? != 0 ]; then
	      echo "mount $device failed !!!"
	      rm -rf $MOUNT_DIR	
              continue
        fi

        ret_val=$?
        if [ -e $MOUNT_DIR/ImageInfo -a -z $mounted_device ]; then
                umount $MOUNT_DIR
		device=$device1

 		dd if=$device of=/tmp/out.fat32 count=1 2>/dev/null

		if [ $? != 0 ]; then
			rm -rf $MOUNT_DIR
			continue
		fi
                grep $FAT32_ID1 /tmp/out.fat32
                ret_val1=$?
                grep $FAT32_ID2 /tmp/out.fat32
                ret_val2=$?
                grep $FAT32_ID3 /tmp/out.fat32
                ret_val3=$?
		grep $FAT32_ID4 /tmp/out.fat32
        	ret_val4=$?
                if [ $ret_val1 = 0 -o $ret_val2 = 0 -o $ret_val3 = 0 -o $ret_val4 = 0 ]; then
                	echo "$device is FAT32"

			##debug_Aaron
                        ##echo "check filesystem..........."
                        ##dosfsck -a $device
			isFAT32=1

			##debug_Aaron on 09/28/2005, for linux 2.6
				mount -t vfat -o umask=0000,iocharset=utf8,shortname=winnt $device $MOUNT_DIR
        	else
                	echo "$device is not FAT32"

			##debug_Aaron
                        ##echo "check filesystem..........."
                        ##e2fsck -p $device
			isFAT32=0

			 ##debug_Aaron on 03/05/2007 for NTFS
                        grep $NTFS_ID1 /tmp/out.fat32
                        ret_val=$?
                        if [ $ret_val = 0 ]; then
				##debug_Aaron on 04/03/2007 NTFS-3g NTFS read/write
				##debug_Aaron on 05/31/2007 for Paragon NTFS read/write
                                if [ -e /lib/modules/ufsd.ko ]; then 
                                	mount -t ufsd -o umask=0000 $device $MOUNT_DIR
                                else
                                        ntfs-3g $device $MOUNT_DIR
				fi
			else
	                	##debug_Aaron on 05/19/2005, do not do quota check
				##mount -t auto -o usrquota,grpquota $device $MOUNT_DIR
				mount -t auto $device $MOUNT_DIR
			fi
        	fi
        	ret_val=$?
		if [ $ret_val = 0 ]; then
 			dd if=$swap_device of=/tmp/out count=1 2>/dev/null
			if [ $? = 0 ]; then
				echo "$swap_device  swap    swap defaults        0 0" >> /etc/fstab      
			fi
		fi
	fi
	echo "ret_val=$ret_val"
 	if [ $ret_val = 0 ]; then
	
		##debug_Aaron on 05/20/2005, share the whole partition
		if [ isFAT32 = 0 ]; then
			chmod -R 777 $MOUNT_DIR
		fi

                ##num=`expr $num + 1`
                echo "$MOUNT_DIR is mounted to $device"

		##debug_Aaron on 05/19/2005, do not do quota check
		##if [ -f "$MOUNT_DIR/aquota.user" -a -f "$MOUNT_DIR/aquota.group" ]; then
                ##        DoQuotaCheck=0
                ## else
                ##        DoQuotaCheck=1
                ## fi

                ## if [ $DoQuotaCheck -eq 1 ]; then
                ##         echo "Quotacheck on $MOUNT_DIR."
                ##         /usr/hddapp/sbin/quotacheck -c -g -u -F vfsv0 $MOUNT_DIR
                ## fi

                ## echo "Quotaon on $MOUNT_DIR."
                ## /usr/hddapp/sbin/quotaon -F vfsv0 $MOUNT_DIR
	else
	        rm -rf $MOUNT_DIR
	fi
done


#start up swapping.
echo "Activating swap partitions ..."
swapon -a
